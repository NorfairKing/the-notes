module Config (renderConfig) where

import           Language.Haskell.TH  (runIO, stringE)
import           Prelude

import           Control.Monad.Reader (ask)
import qualified Data.Text            as T
import           Data.Time            (getZonedTime)

import           Data.Version         (showVersion)
import           Development.GitRev   (gitBranch, gitCommitCount, gitCommitDate,
                                       gitDirty, gitHash)
import           Network.HostName     (getHostName)
import           System.Info
import           Utils

import           Notes

renderConfig :: Note
renderConfig = do
    conf <- ask
    if conf_fast conf
    then do
        comm1 "section*" "WARNING"
        "This is a developmnent version of the notes.\n"
        "It is intended only for development as it compiles faster but it leaves out a lot of content."
    else do
        comm1 "section*" "Circumstances"
        comm1 "subsection*" "Generator version"
        "The following information describes the version of the the-notes generator that was used to compile this document."
        verbatim $ T.pack $ unlines
            [ "commit:             " ++ $(gitHash)
            , "commit date:        " ++ $(gitCommitDate)
            , "commit count:       " ++ $(gitCommitCount)
            , "branch:             " ++ $(gitBranch)
            , "dirty:              " ++ show $(gitDirty)
            ]
        raw "\n"


        comm1 "subsection*" "Compilation Host"
        "The the-notes generator was compiled on a machine with the following characteristics."
        verbatim $ T.pack $ unlines
            [ "os:                 " ++ $(stringE os)
            , "arch:               " ++ $(stringE arch)
            , "hostname:           " ++ $(stringE =<< runIO getHostName)
            ]
        raw "\n"

        "Haskell Compiler info:"
        verbatim $ T.pack $ unlines
            [ "compiler name:      " ++ $(stringE compilerName)
            , "compiler version:   " ++ $(stringE $ showVersion compilerVersion)
            ]
        raw "\n"

        "Compiled on:"
        verbatim $ T.pack $ $(stringE =<< show <$> runIO getZonedTime)
        raw "\n"


        hostname <- liftIO getHostName
        comm1 "subsection*" "Generation Host"
        "The the-notes generator was run on a machine with the following characteristics."
        verbatim $ T.pack $ unlines
            [ "os:                 " ++ os
            , "arch:               " ++ arch
            , "hostname:           " ++ hostname
            ]
        raw "\n"

        "Haskell Compiler info:"
        verbatim $ T.pack $ unlines
            [ "compiler name:      " ++ compilerName
            , "compiler version:   " ++ showVersion compilerVersion
            ]
        raw "\n"


        comm1 "subsection*" "Generation Configuration"
        "The code for this pdf was generated by running the `the notes' generator with the following configuration."
        verbatim $ T.pack $ breakUp $ show conf
        raw "\n"

        zonedTime <- liftIO getZonedTime
        comm0 "LaTeX" <> "code generated on:"
        verbatim $ T.pack $ show zonedTime
        raw "\n"

        packageDep ["yyyymmdd","hhmmss"] "datetime"
        s [comm0 "LaTeX", "compiled on", comm0 "today", " at ", comm0 "currenttime"]
        newline

        s ["The", quoted "the-notes", "project was started on", "September 28, 2015"]


